// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.21.12
// source: vxdb.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Vector represents a vector with metadata
type Vector struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Data          []float32              `protobuf:"fixed32,2,rep,packed,name=data,proto3" json:"data,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ClusterId     uint32                 `protobuf:"varint,4,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Vector) Reset() {
	*x = Vector{}
	mi := &file_vxdb_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Vector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vector) ProtoMessage() {}

func (x *Vector) ProtoReflect() protoreflect.Message {
	mi := &file_vxdb_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vector.ProtoReflect.Descriptor instead.
func (*Vector) Descriptor() ([]byte, []int) {
	return file_vxdb_proto_rawDescGZIP(), []int{0}
}

func (x *Vector) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Vector) GetData() []float32 {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Vector) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Vector) GetClusterId() uint32 {
	if x != nil {
		return x.ClusterId
	}
	return 0
}

func (x *Vector) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// VectorBatch represents a batch of vectors
type VectorBatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Vectors       []*Vector              `protobuf:"bytes,1,rep,name=vectors,proto3" json:"vectors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VectorBatch) Reset() {
	*x = VectorBatch{}
	mi := &file_vxdb_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VectorBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VectorBatch) ProtoMessage() {}

func (x *VectorBatch) ProtoReflect() protoreflect.Message {
	mi := &file_vxdb_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VectorBatch.ProtoReflect.Descriptor instead.
func (*VectorBatch) Descriptor() ([]byte, []int) {
	return file_vxdb_proto_rawDescGZIP(), []int{1}
}

func (x *VectorBatch) GetVectors() []*Vector {
	if x != nil {
		return x.Vectors
	}
	return nil
}

// InsertRequest represents a request to insert vectors
type InsertRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Request:
	//
	//	*InsertRequest_Vector
	//	*InsertRequest_Batch
	Request       isInsertRequest_Request `protobuf_oneof:"request"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InsertRequest) Reset() {
	*x = InsertRequest{}
	mi := &file_vxdb_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InsertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertRequest) ProtoMessage() {}

func (x *InsertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vxdb_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertRequest.ProtoReflect.Descriptor instead.
func (*InsertRequest) Descriptor() ([]byte, []int) {
	return file_vxdb_proto_rawDescGZIP(), []int{2}
}

func (x *InsertRequest) GetRequest() isInsertRequest_Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *InsertRequest) GetVector() *Vector {
	if x != nil {
		if x, ok := x.Request.(*InsertRequest_Vector); ok {
			return x.Vector
		}
	}
	return nil
}

func (x *InsertRequest) GetBatch() *VectorBatch {
	if x != nil {
		if x, ok := x.Request.(*InsertRequest_Batch); ok {
			return x.Batch
		}
	}
	return nil
}

type isInsertRequest_Request interface {
	isInsertRequest_Request()
}

type InsertRequest_Vector struct {
	Vector *Vector `protobuf:"bytes,1,opt,name=vector,proto3,oneof"`
}

type InsertRequest_Batch struct {
	Batch *VectorBatch `protobuf:"bytes,2,opt,name=batch,proto3,oneof"`
}

func (*InsertRequest_Vector) isInsertRequest_Request() {}

func (*InsertRequest_Batch) isInsertRequest_Request() {}

// InsertResponse represents the response to an insert request
type InsertResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	VectorIds     []string               `protobuf:"bytes,3,rep,name=vector_ids,json=vectorIds,proto3" json:"vector_ids,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InsertResponse) Reset() {
	*x = InsertResponse{}
	mi := &file_vxdb_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InsertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertResponse) ProtoMessage() {}

func (x *InsertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vxdb_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertResponse.ProtoReflect.Descriptor instead.
func (*InsertResponse) Descriptor() ([]byte, []int) {
	return file_vxdb_proto_rawDescGZIP(), []int{3}
}

func (x *InsertResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *InsertResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *InsertResponse) GetVectorIds() []string {
	if x != nil {
		return x.VectorIds
	}
	return nil
}

func (x *InsertResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// SearchRequest represents a similarity search request
type SearchRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	QueryVector       *Vector                `protobuf:"bytes,1,opt,name=query_vector,json=queryVector,proto3" json:"query_vector,omitempty"`
	K                 int32                  `protobuf:"varint,2,opt,name=k,proto3" json:"k,omitempty"`                                                                                                                          // number of results to return
	ClusterIds        []string               `protobuf:"bytes,3,rep,name=cluster_ids,json=clusterIds,proto3" json:"cluster_ids,omitempty"`                                                                                       // optional: specific clusters to search
	MetadataFilter    map[string]string      `protobuf:"bytes,4,rep,name=metadata_filter,json=metadataFilter,proto3" json:"metadata_filter,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // optional: metadata filters
	IncludeMetadata   bool                   `protobuf:"varint,5,opt,name=include_metadata,json=includeMetadata,proto3" json:"include_metadata,omitempty"`
	DistanceThreshold float32                `protobuf:"fixed32,6,opt,name=distance_threshold,json=distanceThreshold,proto3" json:"distance_threshold,omitempty"` // optional: maximum distance threshold
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	mi := &file_vxdb_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vxdb_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_vxdb_proto_rawDescGZIP(), []int{4}
}

func (x *SearchRequest) GetQueryVector() *Vector {
	if x != nil {
		return x.QueryVector
	}
	return nil
}

func (x *SearchRequest) GetK() int32 {
	if x != nil {
		return x.K
	}
	return 0
}

func (x *SearchRequest) GetClusterIds() []string {
	if x != nil {
		return x.ClusterIds
	}
	return nil
}

func (x *SearchRequest) GetMetadataFilter() map[string]string {
	if x != nil {
		return x.MetadataFilter
	}
	return nil
}

func (x *SearchRequest) GetIncludeMetadata() bool {
	if x != nil {
		return x.IncludeMetadata
	}
	return false
}

func (x *SearchRequest) GetDistanceThreshold() float32 {
	if x != nil {
		return x.DistanceThreshold
	}
	return 0
}

// SearchResult represents a single search result
type SearchResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Vector        *Vector                `protobuf:"bytes,1,opt,name=vector,proto3" json:"vector,omitempty"`
	Distance      float32                `protobuf:"fixed32,2,opt,name=distance,proto3" json:"distance,omitempty"`
	Score         float32                `protobuf:"fixed32,3,opt,name=score,proto3" json:"score,omitempty"`
	ClusterId     string                 `protobuf:"bytes,4,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	NodeId        string                 `protobuf:"bytes,5,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchResult) Reset() {
	*x = SearchResult{}
	mi := &file_vxdb_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResult) ProtoMessage() {}

func (x *SearchResult) ProtoReflect() protoreflect.Message {
	mi := &file_vxdb_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResult.ProtoReflect.Descriptor instead.
func (*SearchResult) Descriptor() ([]byte, []int) {
	return file_vxdb_proto_rawDescGZIP(), []int{5}
}

func (x *SearchResult) GetVector() *Vector {
	if x != nil {
		return x.Vector
	}
	return nil
}

func (x *SearchResult) GetDistance() float32 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *SearchResult) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *SearchResult) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *SearchResult) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

// SearchResponse represents the response to a search request
type SearchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Results       []*SearchResult        `protobuf:"bytes,3,rep,name=results,proto3" json:"results,omitempty"`
	TotalResults  int64                  `protobuf:"varint,4,opt,name=total_results,json=totalResults,proto3" json:"total_results,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	mi := &file_vxdb_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vxdb_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_vxdb_proto_rawDescGZIP(), []int{6}
}

func (x *SearchResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SearchResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SearchResponse) GetResults() []*SearchResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *SearchResponse) GetTotalResults() int64 {
	if x != nil {
		return x.TotalResults
	}
	return 0
}

func (x *SearchResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// DeleteRequest represents a request to delete vectors
type DeleteRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	VectorIds      []string               `protobuf:"bytes,1,rep,name=vector_ids,json=vectorIds,proto3" json:"vector_ids,omitempty"`
	MetadataFilter map[string]string      `protobuf:"bytes,2,rep,name=metadata_filter,json=metadataFilter,proto3" json:"metadata_filter,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // optional: delete by metadata
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	mi := &file_vxdb_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vxdb_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_vxdb_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteRequest) GetVectorIds() []string {
	if x != nil {
		return x.VectorIds
	}
	return nil
}

func (x *DeleteRequest) GetMetadataFilter() map[string]string {
	if x != nil {
		return x.MetadataFilter
	}
	return nil
}

// DeleteResponse represents the response to a delete request
type DeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	DeletedCount  int64                  `protobuf:"varint,3,opt,name=deleted_count,json=deletedCount,proto3" json:"deleted_count,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	mi := &file_vxdb_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vxdb_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_vxdb_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteResponse) GetDeletedCount() int64 {
	if x != nil {
		return x.DeletedCount
	}
	return 0
}

func (x *DeleteResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// ClusterInfo represents information about a cluster
type ClusterInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	NodeIds       []string               `protobuf:"bytes,2,rep,name=node_ids,json=nodeIds,proto3" json:"node_ids,omitempty"`
	VectorCount   uint64                 `protobuf:"varint,3,opt,name=vector_count,json=vectorCount,proto3" json:"vector_count,omitempty"`
	SizeBytes     uint64                 `protobuf:"varint,4,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterInfo) Reset() {
	*x = ClusterInfo{}
	mi := &file_vxdb_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterInfo) ProtoMessage() {}

func (x *ClusterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_vxdb_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterInfo.ProtoReflect.Descriptor instead.
func (*ClusterInfo) Descriptor() ([]byte, []int) {
	return file_vxdb_proto_rawDescGZIP(), []int{9}
}

func (x *ClusterInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ClusterInfo) GetNodeIds() []string {
	if x != nil {
		return x.NodeIds
	}
	return nil
}

func (x *ClusterInfo) GetVectorCount() uint64 {
	if x != nil {
		return x.VectorCount
	}
	return 0
}

func (x *ClusterInfo) GetSizeBytes() uint64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

func (x *ClusterInfo) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// NodeInfo represents information about a node
type NodeInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Port          int32                  `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	IsPrimary     bool                   `protobuf:"varint,4,opt,name=is_primary,json=isPrimary,proto3" json:"is_primary,omitempty"`
	Status        string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	VectorCount   uint64                 `protobuf:"varint,6,opt,name=vector_count,json=vectorCount,proto3" json:"vector_count,omitempty"`
	MemoryUsage   uint64                 `protobuf:"varint,7,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`
	DiskUsage     uint64                 `protobuf:"varint,8,opt,name=disk_usage,json=diskUsage,proto3" json:"disk_usage,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,9,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeInfo) Reset() {
	*x = NodeInfo{}
	mi := &file_vxdb_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInfo) ProtoMessage() {}

func (x *NodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_vxdb_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInfo.ProtoReflect.Descriptor instead.
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return file_vxdb_proto_rawDescGZIP(), []int{10}
}

func (x *NodeInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NodeInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *NodeInfo) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *NodeInfo) GetIsPrimary() bool {
	if x != nil {
		return x.IsPrimary
	}
	return false
}

func (x *NodeInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *NodeInfo) GetVectorCount() uint64 {
	if x != nil {
		return x.VectorCount
	}
	return 0
}

func (x *NodeInfo) GetMemoryUsage() uint64 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

func (x *NodeInfo) GetDiskUsage() uint64 {
	if x != nil {
		return x.DiskUsage
	}
	return 0
}

func (x *NodeInfo) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// ClusterStatus represents the status of the cluster
type ClusterStatus struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Clusters          []*ClusterInfo         `protobuf:"bytes,1,rep,name=clusters,proto3" json:"clusters,omitempty"`
	Nodes             []*NodeInfo            `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`
	TotalClusters     uint32                 `protobuf:"varint,3,opt,name=total_clusters,json=totalClusters,proto3" json:"total_clusters,omitempty"`
	ReplicationFactor uint32                 `protobuf:"varint,4,opt,name=replication_factor,json=replicationFactor,proto3" json:"replication_factor,omitempty"`
	Metadata          map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ClusterStatus) Reset() {
	*x = ClusterStatus{}
	mi := &file_vxdb_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterStatus) ProtoMessage() {}

func (x *ClusterStatus) ProtoReflect() protoreflect.Message {
	mi := &file_vxdb_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterStatus.ProtoReflect.Descriptor instead.
func (*ClusterStatus) Descriptor() ([]byte, []int) {
	return file_vxdb_proto_rawDescGZIP(), []int{11}
}

func (x *ClusterStatus) GetClusters() []*ClusterInfo {
	if x != nil {
		return x.Clusters
	}
	return nil
}

func (x *ClusterStatus) GetNodes() []*NodeInfo {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *ClusterStatus) GetTotalClusters() uint32 {
	if x != nil {
		return x.TotalClusters
	}
	return 0
}

func (x *ClusterStatus) GetReplicationFactor() uint32 {
	if x != nil {
		return x.ReplicationFactor
	}
	return 0
}

func (x *ClusterStatus) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// HealthCheckRequest represents a health check request
type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Detailed      bool                   `protobuf:"varint,1,opt,name=detailed,proto3" json:"detailed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_vxdb_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vxdb_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_vxdb_proto_rawDescGZIP(), []int{12}
}

func (x *HealthCheckRequest) GetDetailed() bool {
	if x != nil {
		return x.Detailed
	}
	return false
}

// HealthCheckResponse represents the response to a health check
type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Healthy       bool                   `protobuf:"varint,1,opt,name=healthy,proto3" json:"healthy,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Details       map[string]string      `protobuf:"bytes,4,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_vxdb_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vxdb_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_vxdb_proto_rawDescGZIP(), []int{13}
}

func (x *HealthCheckResponse) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *HealthCheckResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthCheckResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HealthCheckResponse) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *HealthCheckResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// MetricsRequest represents a metrics request
type MetricsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MetricType    string                 `protobuf:"bytes,1,opt,name=metric_type,json=metricType,proto3" json:"metric_type,omitempty"` // "system", "cluster", "vectors", "performance"
	ClusterId     string                 `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`    // optional: specific cluster
	NodeId        string                 `protobuf:"bytes,3,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`             // optional: specific node
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricsRequest) Reset() {
	*x = MetricsRequest{}
	mi := &file_vxdb_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsRequest) ProtoMessage() {}

func (x *MetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vxdb_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsRequest.ProtoReflect.Descriptor instead.
func (*MetricsRequest) Descriptor() ([]byte, []int) {
	return file_vxdb_proto_rawDescGZIP(), []int{14}
}

func (x *MetricsRequest) GetMetricType() string {
	if x != nil {
		return x.MetricType
	}
	return ""
}

func (x *MetricsRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *MetricsRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

// MetricsResponse represents the response to a metrics request
type MetricsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Metrics       map[string]float64     `protobuf:"bytes,3,rep,name=metrics,proto3" json:"metrics,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	Metadata      map[string]string      `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricsResponse) Reset() {
	*x = MetricsResponse{}
	mi := &file_vxdb_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsResponse) ProtoMessage() {}

func (x *MetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vxdb_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsResponse.ProtoReflect.Descriptor instead.
func (*MetricsResponse) Descriptor() ([]byte, []int) {
	return file_vxdb_proto_rawDescGZIP(), []int{15}
}

func (x *MetricsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *MetricsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *MetricsResponse) GetMetrics() map[string]float64 {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *MetricsResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *MetricsResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// ConfigUpdateRequest represents a configuration update request
type ConfigUpdateRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ConfigUpdates   map[string]string      `protobuf:"bytes,1,rep,name=config_updates,json=configUpdates,proto3" json:"config_updates,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	RestartRequired bool                   `protobuf:"varint,2,opt,name=restart_required,json=restartRequired,proto3" json:"restart_required,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ConfigUpdateRequest) Reset() {
	*x = ConfigUpdateRequest{}
	mi := &file_vxdb_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigUpdateRequest) ProtoMessage() {}

func (x *ConfigUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vxdb_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigUpdateRequest.ProtoReflect.Descriptor instead.
func (*ConfigUpdateRequest) Descriptor() ([]byte, []int) {
	return file_vxdb_proto_rawDescGZIP(), []int{16}
}

func (x *ConfigUpdateRequest) GetConfigUpdates() map[string]string {
	if x != nil {
		return x.ConfigUpdates
	}
	return nil
}

func (x *ConfigUpdateRequest) GetRestartRequired() bool {
	if x != nil {
		return x.RestartRequired
	}
	return false
}

// ConfigUpdateResponse represents the response to a configuration update
type ConfigUpdateResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Success        bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message        string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	AppliedUpdates map[string]string      `protobuf:"bytes,3,rep,name=applied_updates,json=appliedUpdates,proto3" json:"applied_updates,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	FailedUpdates  map[string]string      `protobuf:"bytes,4,rep,name=failed_updates,json=failedUpdates,proto3" json:"failed_updates,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ConfigUpdateResponse) Reset() {
	*x = ConfigUpdateResponse{}
	mi := &file_vxdb_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigUpdateResponse) ProtoMessage() {}

func (x *ConfigUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vxdb_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigUpdateResponse.ProtoReflect.Descriptor instead.
func (*ConfigUpdateResponse) Descriptor() ([]byte, []int) {
	return file_vxdb_proto_rawDescGZIP(), []int{17}
}

func (x *ConfigUpdateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ConfigUpdateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ConfigUpdateResponse) GetAppliedUpdates() map[string]string {
	if x != nil {
		return x.AppliedUpdates
	}
	return nil
}

func (x *ConfigUpdateResponse) GetFailedUpdates() map[string]string {
	if x != nil {
		return x.FailedUpdates
	}
	return nil
}

var File_vxdb_proto protoreflect.FileDescriptor

const file_vxdb_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"vxdb.proto\x12\x04vxdb\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bgoogle/protobuf/empty.proto\"\xfa\x01\n" +
	"\x06Vector\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04data\x18\x02 \x03(\x02R\x04data\x126\n" +
	"\bmetadata\x18\x03 \x03(\v2\x1a.vxdb.Vector.MetadataEntryR\bmetadata\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x04 \x01(\rR\tclusterId\x128\n" +
	"\ttimestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"5\n" +
	"\vVectorBatch\x12&\n" +
	"\avectors\x18\x01 \x03(\v2\f.vxdb.VectorR\avectors\"m\n" +
	"\rInsertRequest\x12&\n" +
	"\x06vector\x18\x01 \x01(\v2\f.vxdb.VectorH\x00R\x06vector\x12)\n" +
	"\x05batch\x18\x02 \x01(\v2\x11.vxdb.VectorBatchH\x00R\x05batchB\t\n" +
	"\arequest\"\xe0\x01\n" +
	"\x0eInsertResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1d\n" +
	"\n" +
	"vector_ids\x18\x03 \x03(\tR\tvectorIds\x12>\n" +
	"\bmetadata\x18\x04 \x03(\v2\".vxdb.InsertResponse.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xde\x02\n" +
	"\rSearchRequest\x12/\n" +
	"\fquery_vector\x18\x01 \x01(\v2\f.vxdb.VectorR\vqueryVector\x12\f\n" +
	"\x01k\x18\x02 \x01(\x05R\x01k\x12\x1f\n" +
	"\vcluster_ids\x18\x03 \x03(\tR\n" +
	"clusterIds\x12P\n" +
	"\x0fmetadata_filter\x18\x04 \x03(\v2'.vxdb.SearchRequest.MetadataFilterEntryR\x0emetadataFilter\x12)\n" +
	"\x10include_metadata\x18\x05 \x01(\bR\x0fincludeMetadata\x12-\n" +
	"\x12distance_threshold\x18\x06 \x01(\x02R\x11distanceThreshold\x1aA\n" +
	"\x13MetadataFilterEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x9e\x01\n" +
	"\fSearchResult\x12$\n" +
	"\x06vector\x18\x01 \x01(\v2\f.vxdb.VectorR\x06vector\x12\x1a\n" +
	"\bdistance\x18\x02 \x01(\x02R\bdistance\x12\x14\n" +
	"\x05score\x18\x03 \x01(\x02R\x05score\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x04 \x01(\tR\tclusterId\x12\x17\n" +
	"\anode_id\x18\x05 \x01(\tR\x06nodeId\"\x94\x02\n" +
	"\x0eSearchResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12,\n" +
	"\aresults\x18\x03 \x03(\v2\x12.vxdb.SearchResultR\aresults\x12#\n" +
	"\rtotal_results\x18\x04 \x01(\x03R\ftotalResults\x12>\n" +
	"\bmetadata\x18\x05 \x03(\v2\".vxdb.SearchResponse.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc3\x01\n" +
	"\rDeleteRequest\x12\x1d\n" +
	"\n" +
	"vector_ids\x18\x01 \x03(\tR\tvectorIds\x12P\n" +
	"\x0fmetadata_filter\x18\x02 \x03(\v2'.vxdb.DeleteRequest.MetadataFilterEntryR\x0emetadataFilter\x1aA\n" +
	"\x13MetadataFilterEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe6\x01\n" +
	"\x0eDeleteResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12#\n" +
	"\rdeleted_count\x18\x03 \x01(\x03R\fdeletedCount\x12>\n" +
	"\bmetadata\x18\x04 \x03(\v2\".vxdb.DeleteResponse.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf4\x01\n" +
	"\vClusterInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bnode_ids\x18\x02 \x03(\tR\anodeIds\x12!\n" +
	"\fvector_count\x18\x03 \x01(\x04R\vvectorCount\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\x04 \x01(\x04R\tsizeBytes\x12;\n" +
	"\bmetadata\x18\x05 \x03(\v2\x1f.vxdb.ClusterInfo.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xdb\x02\n" +
	"\bNodeInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12\x12\n" +
	"\x04port\x18\x03 \x01(\x05R\x04port\x12\x1d\n" +
	"\n" +
	"is_primary\x18\x04 \x01(\bR\tisPrimary\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\x12!\n" +
	"\fvector_count\x18\x06 \x01(\x04R\vvectorCount\x12!\n" +
	"\fmemory_usage\x18\a \x01(\x04R\vmemoryUsage\x12\x1d\n" +
	"\n" +
	"disk_usage\x18\b \x01(\x04R\tdiskUsage\x128\n" +
	"\bmetadata\x18\t \x03(\v2\x1c.vxdb.NodeInfo.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb6\x02\n" +
	"\rClusterStatus\x12-\n" +
	"\bclusters\x18\x01 \x03(\v2\x11.vxdb.ClusterInfoR\bclusters\x12$\n" +
	"\x05nodes\x18\x02 \x03(\v2\x0e.vxdb.NodeInfoR\x05nodes\x12%\n" +
	"\x0etotal_clusters\x18\x03 \x01(\rR\rtotalClusters\x12-\n" +
	"\x12replication_factor\x18\x04 \x01(\rR\x11replicationFactor\x12=\n" +
	"\bmetadata\x18\x05 \x03(\v2!.vxdb.ClusterStatus.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"0\n" +
	"\x12HealthCheckRequest\x12\x1a\n" +
	"\bdetailed\x18\x01 \x01(\bR\bdetailed\"\x99\x02\n" +
	"\x13HealthCheckResponse\x12\x18\n" +
	"\ahealthy\x18\x01 \x01(\bR\ahealthy\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12@\n" +
	"\adetails\x18\x04 \x03(\v2&.vxdb.HealthCheckResponse.DetailsEntryR\adetails\x128\n" +
	"\ttimestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"i\n" +
	"\x0eMetricsRequest\x12\x1f\n" +
	"\vmetric_type\x18\x01 \x01(\tR\n" +
	"metricType\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x02 \x01(\tR\tclusterId\x12\x17\n" +
	"\anode_id\x18\x03 \x01(\tR\x06nodeId\"\xf7\x02\n" +
	"\x0fMetricsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12<\n" +
	"\ametrics\x18\x03 \x03(\v2\".vxdb.MetricsResponse.MetricsEntryR\ametrics\x12?\n" +
	"\bmetadata\x18\x04 \x03(\v2#.vxdb.MetricsResponse.MetadataEntryR\bmetadata\x128\n" +
	"\ttimestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x1a:\n" +
	"\fMetricsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd7\x01\n" +
	"\x13ConfigUpdateRequest\x12S\n" +
	"\x0econfig_updates\x18\x01 \x03(\v2,.vxdb.ConfigUpdateRequest.ConfigUpdatesEntryR\rconfigUpdates\x12)\n" +
	"\x10restart_required\x18\x02 \x01(\bR\x0frestartRequired\x1a@\n" +
	"\x12ConfigUpdatesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xfe\x02\n" +
	"\x14ConfigUpdateResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12W\n" +
	"\x0fapplied_updates\x18\x03 \x03(\v2..vxdb.ConfigUpdateResponse.AppliedUpdatesEntryR\x0eappliedUpdates\x12T\n" +
	"\x0efailed_updates\x18\x04 \x03(\v2-.vxdb.ConfigUpdateResponse.FailedUpdatesEntryR\rfailedUpdates\x1aA\n" +
	"\x13AppliedUpdatesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a@\n" +
	"\x12FailedUpdatesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012\x86\x06\n" +
	"\x0eStorageService\x129\n" +
	"\fInsertVector\x12\x13.vxdb.InsertRequest\x1a\x14.vxdb.InsertResponse\x12C\n" +
	"\x12InsertVectorStream\x12\x13.vxdb.InsertRequest\x1a\x14.vxdb.InsertResponse(\x010\x01\x123\n" +
	"\x06Search\x12\x13.vxdb.SearchRequest\x1a\x14.vxdb.SearchResponse\x12=\n" +
	"\fSearchStream\x12\x13.vxdb.SearchRequest\x1a\x14.vxdb.SearchResponse(\x010\x01\x12:\n" +
	"\rDeleteVectors\x12\x13.vxdb.DeleteRequest\x1a\x14.vxdb.DeleteResponse\x12D\n" +
	"\x13DeleteVectorsStream\x12\x13.vxdb.DeleteRequest\x1a\x14.vxdb.DeleteResponse(\x010\x01\x126\n" +
	"\x0eGetClusterInfo\x12\x11.vxdb.ClusterInfo\x1a\x11.vxdb.ClusterInfo\x12?\n" +
	"\x10GetClusterStatus\x12\x16.google.protobuf.Empty\x1a\x13.vxdb.ClusterStatus\x12B\n" +
	"\vHealthCheck\x12\x18.vxdb.HealthCheckRequest\x1a\x19.vxdb.HealthCheckResponse\x129\n" +
	"\n" +
	"GetMetrics\x12\x14.vxdb.MetricsRequest\x1a\x15.vxdb.MetricsResponse\x12E\n" +
	"\fUpdateConfig\x12\x19.vxdb.ConfigUpdateRequest\x1a\x1a.vxdb.ConfigUpdateResponse\x12?\n" +
	"\tGetConfig\x12\x16.google.protobuf.Empty\x1a\x1a.vxdb.ConfigUpdateResponse2\x89\x05\n" +
	"\rInsertService\x129\n" +
	"\fInsertVector\x12\x13.vxdb.InsertRequest\x1a\x14.vxdb.InsertResponse\x12C\n" +
	"\x12InsertVectorStream\x12\x13.vxdb.InsertRequest\x1a\x14.vxdb.InsertResponse(\x010\x01\x126\n" +
	"\vInsertBatch\x12\x11.vxdb.VectorBatch\x1a\x14.vxdb.InsertResponse\x12@\n" +
	"\x11InsertBatchStream\x12\x11.vxdb.VectorBatch\x1a\x14.vxdb.InsertResponse(\x010\x01\x126\n" +
	"\x13GetClusterForVector\x12\f.vxdb.Vector\x1a\x11.vxdb.ClusterInfo\x12?\n" +
	"\x10GetClusterStatus\x12\x16.google.protobuf.Empty\x1a\x13.vxdb.ClusterStatus\x12B\n" +
	"\vHealthCheck\x12\x18.vxdb.HealthCheckRequest\x1a\x19.vxdb.HealthCheckResponse\x129\n" +
	"\n" +
	"GetMetrics\x12\x14.vxdb.MetricsRequest\x1a\x15.vxdb.MetricsResponse\x12E\n" +
	"\fUpdateConfig\x12\x19.vxdb.ConfigUpdateRequest\x1a\x1a.vxdb.ConfigUpdateResponse\x12?\n" +
	"\tGetConfig\x12\x16.google.protobuf.Empty\x1a\x1a.vxdb.ConfigUpdateResponse2\x8f\x05\n" +
	"\rSearchService\x123\n" +
	"\x06Search\x12\x13.vxdb.SearchRequest\x1a\x14.vxdb.SearchResponse\x12=\n" +
	"\fSearchStream\x12\x13.vxdb.SearchRequest\x1a\x14.vxdb.SearchResponse(\x010\x01\x12?\n" +
	"\x12MultiClusterSearch\x12\x13.vxdb.SearchRequest\x1a\x14.vxdb.SearchResponse\x12I\n" +
	"\x18MultiClusterSearchStream\x12\x13.vxdb.SearchRequest\x1a\x14.vxdb.SearchResponse(\x010\x01\x126\n" +
	"\x0eGetClusterInfo\x12\x11.vxdb.ClusterInfo\x1a\x11.vxdb.ClusterInfo\x12?\n" +
	"\x10GetClusterStatus\x12\x16.google.protobuf.Empty\x1a\x13.vxdb.ClusterStatus\x12B\n" +
	"\vHealthCheck\x12\x18.vxdb.HealthCheckRequest\x1a\x19.vxdb.HealthCheckResponse\x129\n" +
	"\n" +
	"GetMetrics\x12\x14.vxdb.MetricsRequest\x1a\x15.vxdb.MetricsResponse\x12E\n" +
	"\fUpdateConfig\x12\x19.vxdb.ConfigUpdateRequest\x1a\x1a.vxdb.ConfigUpdateResponse\x12?\n" +
	"\tGetConfig\x12\x16.google.protobuf.Empty\x1a\x1a.vxdb.ConfigUpdateResponse2\x91\x06\n" +
	"\fAdminService\x12)\n" +
	"\aAddNode\x12\x0e.vxdb.NodeInfo\x1a\x0e.vxdb.NodeInfo\x124\n" +
	"\n" +
	"RemoveNode\x12\x0e.vxdb.NodeInfo\x1a\x16.google.protobuf.Empty\x12,\n" +
	"\n" +
	"UpdateNode\x12\x0e.vxdb.NodeInfo\x1a\x0e.vxdb.NodeInfo\x125\n" +
	"\rCreateCluster\x12\x11.vxdb.ClusterInfo\x1a\x11.vxdb.ClusterInfo\x12:\n" +
	"\rDeleteCluster\x12\x11.vxdb.ClusterInfo\x1a\x16.google.protobuf.Empty\x125\n" +
	"\rUpdateCluster\x12\x11.vxdb.ClusterInfo\x1a\x11.vxdb.ClusterInfo\x12>\n" +
	"\fBackupSystem\x12\x16.google.protobuf.Empty\x1a\x16.google.protobuf.Empty\x12?\n" +
	"\rRestoreSystem\x12\x16.google.protobuf.Empty\x1a\x16.google.protobuf.Empty\x12@\n" +
	"\x0eCompactStorage\x12\x16.google.protobuf.Empty\x1a\x16.google.protobuf.Empty\x12B\n" +
	"\vHealthCheck\x12\x18.vxdb.HealthCheckRequest\x1a\x19.vxdb.HealthCheckResponse\x129\n" +
	"\n" +
	"GetMetrics\x12\x14.vxdb.MetricsRequest\x1a\x15.vxdb.MetricsResponse\x12E\n" +
	"\fUpdateConfig\x12\x19.vxdb.ConfigUpdateRequest\x1a\x1a.vxdb.ConfigUpdateResponse\x12?\n" +
	"\tGetConfig\x12\x16.google.protobuf.Empty\x1a\x1a.vxdb.ConfigUpdateResponseB\x1cZ\x1agithub.com/vxdb/vxdb/protob\x06proto3"

var (
	file_vxdb_proto_rawDescOnce sync.Once
	file_vxdb_proto_rawDescData []byte
)

func file_vxdb_proto_rawDescGZIP() []byte {
	file_vxdb_proto_rawDescOnce.Do(func() {
		file_vxdb_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_vxdb_proto_rawDesc), len(file_vxdb_proto_rawDesc)))
	})
	return file_vxdb_proto_rawDescData
}

var file_vxdb_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_vxdb_proto_goTypes = []any{
	(*Vector)(nil),                // 0: vxdb.Vector
	(*VectorBatch)(nil),           // 1: vxdb.VectorBatch
	(*InsertRequest)(nil),         // 2: vxdb.InsertRequest
	(*InsertResponse)(nil),        // 3: vxdb.InsertResponse
	(*SearchRequest)(nil),         // 4: vxdb.SearchRequest
	(*SearchResult)(nil),          // 5: vxdb.SearchResult
	(*SearchResponse)(nil),        // 6: vxdb.SearchResponse
	(*DeleteRequest)(nil),         // 7: vxdb.DeleteRequest
	(*DeleteResponse)(nil),        // 8: vxdb.DeleteResponse
	(*ClusterInfo)(nil),           // 9: vxdb.ClusterInfo
	(*NodeInfo)(nil),              // 10: vxdb.NodeInfo
	(*ClusterStatus)(nil),         // 11: vxdb.ClusterStatus
	(*HealthCheckRequest)(nil),    // 12: vxdb.HealthCheckRequest
	(*HealthCheckResponse)(nil),   // 13: vxdb.HealthCheckResponse
	(*MetricsRequest)(nil),        // 14: vxdb.MetricsRequest
	(*MetricsResponse)(nil),       // 15: vxdb.MetricsResponse
	(*ConfigUpdateRequest)(nil),   // 16: vxdb.ConfigUpdateRequest
	(*ConfigUpdateResponse)(nil),  // 17: vxdb.ConfigUpdateResponse
	nil,                           // 18: vxdb.Vector.MetadataEntry
	nil,                           // 19: vxdb.InsertResponse.MetadataEntry
	nil,                           // 20: vxdb.SearchRequest.MetadataFilterEntry
	nil,                           // 21: vxdb.SearchResponse.MetadataEntry
	nil,                           // 22: vxdb.DeleteRequest.MetadataFilterEntry
	nil,                           // 23: vxdb.DeleteResponse.MetadataEntry
	nil,                           // 24: vxdb.ClusterInfo.MetadataEntry
	nil,                           // 25: vxdb.NodeInfo.MetadataEntry
	nil,                           // 26: vxdb.ClusterStatus.MetadataEntry
	nil,                           // 27: vxdb.HealthCheckResponse.DetailsEntry
	nil,                           // 28: vxdb.MetricsResponse.MetricsEntry
	nil,                           // 29: vxdb.MetricsResponse.MetadataEntry
	nil,                           // 30: vxdb.ConfigUpdateRequest.ConfigUpdatesEntry
	nil,                           // 31: vxdb.ConfigUpdateResponse.AppliedUpdatesEntry
	nil,                           // 32: vxdb.ConfigUpdateResponse.FailedUpdatesEntry
	(*timestamppb.Timestamp)(nil), // 33: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 34: google.protobuf.Empty
}
var file_vxdb_proto_depIdxs = []int32{
	18, // 0: vxdb.Vector.metadata:type_name -> vxdb.Vector.MetadataEntry
	33, // 1: vxdb.Vector.timestamp:type_name -> google.protobuf.Timestamp
	0,  // 2: vxdb.VectorBatch.vectors:type_name -> vxdb.Vector
	0,  // 3: vxdb.InsertRequest.vector:type_name -> vxdb.Vector
	1,  // 4: vxdb.InsertRequest.batch:type_name -> vxdb.VectorBatch
	19, // 5: vxdb.InsertResponse.metadata:type_name -> vxdb.InsertResponse.MetadataEntry
	0,  // 6: vxdb.SearchRequest.query_vector:type_name -> vxdb.Vector
	20, // 7: vxdb.SearchRequest.metadata_filter:type_name -> vxdb.SearchRequest.MetadataFilterEntry
	0,  // 8: vxdb.SearchResult.vector:type_name -> vxdb.Vector
	5,  // 9: vxdb.SearchResponse.results:type_name -> vxdb.SearchResult
	21, // 10: vxdb.SearchResponse.metadata:type_name -> vxdb.SearchResponse.MetadataEntry
	22, // 11: vxdb.DeleteRequest.metadata_filter:type_name -> vxdb.DeleteRequest.MetadataFilterEntry
	23, // 12: vxdb.DeleteResponse.metadata:type_name -> vxdb.DeleteResponse.MetadataEntry
	24, // 13: vxdb.ClusterInfo.metadata:type_name -> vxdb.ClusterInfo.MetadataEntry
	25, // 14: vxdb.NodeInfo.metadata:type_name -> vxdb.NodeInfo.MetadataEntry
	9,  // 15: vxdb.ClusterStatus.clusters:type_name -> vxdb.ClusterInfo
	10, // 16: vxdb.ClusterStatus.nodes:type_name -> vxdb.NodeInfo
	26, // 17: vxdb.ClusterStatus.metadata:type_name -> vxdb.ClusterStatus.MetadataEntry
	27, // 18: vxdb.HealthCheckResponse.details:type_name -> vxdb.HealthCheckResponse.DetailsEntry
	33, // 19: vxdb.HealthCheckResponse.timestamp:type_name -> google.protobuf.Timestamp
	28, // 20: vxdb.MetricsResponse.metrics:type_name -> vxdb.MetricsResponse.MetricsEntry
	29, // 21: vxdb.MetricsResponse.metadata:type_name -> vxdb.MetricsResponse.MetadataEntry
	33, // 22: vxdb.MetricsResponse.timestamp:type_name -> google.protobuf.Timestamp
	30, // 23: vxdb.ConfigUpdateRequest.config_updates:type_name -> vxdb.ConfigUpdateRequest.ConfigUpdatesEntry
	31, // 24: vxdb.ConfigUpdateResponse.applied_updates:type_name -> vxdb.ConfigUpdateResponse.AppliedUpdatesEntry
	32, // 25: vxdb.ConfigUpdateResponse.failed_updates:type_name -> vxdb.ConfigUpdateResponse.FailedUpdatesEntry
	2,  // 26: vxdb.StorageService.InsertVector:input_type -> vxdb.InsertRequest
	2,  // 27: vxdb.StorageService.InsertVectorStream:input_type -> vxdb.InsertRequest
	4,  // 28: vxdb.StorageService.Search:input_type -> vxdb.SearchRequest
	4,  // 29: vxdb.StorageService.SearchStream:input_type -> vxdb.SearchRequest
	7,  // 30: vxdb.StorageService.DeleteVectors:input_type -> vxdb.DeleteRequest
	7,  // 31: vxdb.StorageService.DeleteVectorsStream:input_type -> vxdb.DeleteRequest
	9,  // 32: vxdb.StorageService.GetClusterInfo:input_type -> vxdb.ClusterInfo
	34, // 33: vxdb.StorageService.GetClusterStatus:input_type -> google.protobuf.Empty
	12, // 34: vxdb.StorageService.HealthCheck:input_type -> vxdb.HealthCheckRequest
	14, // 35: vxdb.StorageService.GetMetrics:input_type -> vxdb.MetricsRequest
	16, // 36: vxdb.StorageService.UpdateConfig:input_type -> vxdb.ConfigUpdateRequest
	34, // 37: vxdb.StorageService.GetConfig:input_type -> google.protobuf.Empty
	2,  // 38: vxdb.InsertService.InsertVector:input_type -> vxdb.InsertRequest
	2,  // 39: vxdb.InsertService.InsertVectorStream:input_type -> vxdb.InsertRequest
	1,  // 40: vxdb.InsertService.InsertBatch:input_type -> vxdb.VectorBatch
	1,  // 41: vxdb.InsertService.InsertBatchStream:input_type -> vxdb.VectorBatch
	0,  // 42: vxdb.InsertService.GetClusterForVector:input_type -> vxdb.Vector
	34, // 43: vxdb.InsertService.GetClusterStatus:input_type -> google.protobuf.Empty
	12, // 44: vxdb.InsertService.HealthCheck:input_type -> vxdb.HealthCheckRequest
	14, // 45: vxdb.InsertService.GetMetrics:input_type -> vxdb.MetricsRequest
	16, // 46: vxdb.InsertService.UpdateConfig:input_type -> vxdb.ConfigUpdateRequest
	34, // 47: vxdb.InsertService.GetConfig:input_type -> google.protobuf.Empty
	4,  // 48: vxdb.SearchService.Search:input_type -> vxdb.SearchRequest
	4,  // 49: vxdb.SearchService.SearchStream:input_type -> vxdb.SearchRequest
	4,  // 50: vxdb.SearchService.MultiClusterSearch:input_type -> vxdb.SearchRequest
	4,  // 51: vxdb.SearchService.MultiClusterSearchStream:input_type -> vxdb.SearchRequest
	9,  // 52: vxdb.SearchService.GetClusterInfo:input_type -> vxdb.ClusterInfo
	34, // 53: vxdb.SearchService.GetClusterStatus:input_type -> google.protobuf.Empty
	12, // 54: vxdb.SearchService.HealthCheck:input_type -> vxdb.HealthCheckRequest
	14, // 55: vxdb.SearchService.GetMetrics:input_type -> vxdb.MetricsRequest
	16, // 56: vxdb.SearchService.UpdateConfig:input_type -> vxdb.ConfigUpdateRequest
	34, // 57: vxdb.SearchService.GetConfig:input_type -> google.protobuf.Empty
	10, // 58: vxdb.AdminService.AddNode:input_type -> vxdb.NodeInfo
	10, // 59: vxdb.AdminService.RemoveNode:input_type -> vxdb.NodeInfo
	10, // 60: vxdb.AdminService.UpdateNode:input_type -> vxdb.NodeInfo
	9,  // 61: vxdb.AdminService.CreateCluster:input_type -> vxdb.ClusterInfo
	9,  // 62: vxdb.AdminService.DeleteCluster:input_type -> vxdb.ClusterInfo
	9,  // 63: vxdb.AdminService.UpdateCluster:input_type -> vxdb.ClusterInfo
	34, // 64: vxdb.AdminService.BackupSystem:input_type -> google.protobuf.Empty
	34, // 65: vxdb.AdminService.RestoreSystem:input_type -> google.protobuf.Empty
	34, // 66: vxdb.AdminService.CompactStorage:input_type -> google.protobuf.Empty
	12, // 67: vxdb.AdminService.HealthCheck:input_type -> vxdb.HealthCheckRequest
	14, // 68: vxdb.AdminService.GetMetrics:input_type -> vxdb.MetricsRequest
	16, // 69: vxdb.AdminService.UpdateConfig:input_type -> vxdb.ConfigUpdateRequest
	34, // 70: vxdb.AdminService.GetConfig:input_type -> google.protobuf.Empty
	3,  // 71: vxdb.StorageService.InsertVector:output_type -> vxdb.InsertResponse
	3,  // 72: vxdb.StorageService.InsertVectorStream:output_type -> vxdb.InsertResponse
	6,  // 73: vxdb.StorageService.Search:output_type -> vxdb.SearchResponse
	6,  // 74: vxdb.StorageService.SearchStream:output_type -> vxdb.SearchResponse
	8,  // 75: vxdb.StorageService.DeleteVectors:output_type -> vxdb.DeleteResponse
	8,  // 76: vxdb.StorageService.DeleteVectorsStream:output_type -> vxdb.DeleteResponse
	9,  // 77: vxdb.StorageService.GetClusterInfo:output_type -> vxdb.ClusterInfo
	11, // 78: vxdb.StorageService.GetClusterStatus:output_type -> vxdb.ClusterStatus
	13, // 79: vxdb.StorageService.HealthCheck:output_type -> vxdb.HealthCheckResponse
	15, // 80: vxdb.StorageService.GetMetrics:output_type -> vxdb.MetricsResponse
	17, // 81: vxdb.StorageService.UpdateConfig:output_type -> vxdb.ConfigUpdateResponse
	17, // 82: vxdb.StorageService.GetConfig:output_type -> vxdb.ConfigUpdateResponse
	3,  // 83: vxdb.InsertService.InsertVector:output_type -> vxdb.InsertResponse
	3,  // 84: vxdb.InsertService.InsertVectorStream:output_type -> vxdb.InsertResponse
	3,  // 85: vxdb.InsertService.InsertBatch:output_type -> vxdb.InsertResponse
	3,  // 86: vxdb.InsertService.InsertBatchStream:output_type -> vxdb.InsertResponse
	9,  // 87: vxdb.InsertService.GetClusterForVector:output_type -> vxdb.ClusterInfo
	11, // 88: vxdb.InsertService.GetClusterStatus:output_type -> vxdb.ClusterStatus
	13, // 89: vxdb.InsertService.HealthCheck:output_type -> vxdb.HealthCheckResponse
	15, // 90: vxdb.InsertService.GetMetrics:output_type -> vxdb.MetricsResponse
	17, // 91: vxdb.InsertService.UpdateConfig:output_type -> vxdb.ConfigUpdateResponse
	17, // 92: vxdb.InsertService.GetConfig:output_type -> vxdb.ConfigUpdateResponse
	6,  // 93: vxdb.SearchService.Search:output_type -> vxdb.SearchResponse
	6,  // 94: vxdb.SearchService.SearchStream:output_type -> vxdb.SearchResponse
	6,  // 95: vxdb.SearchService.MultiClusterSearch:output_type -> vxdb.SearchResponse
	6,  // 96: vxdb.SearchService.MultiClusterSearchStream:output_type -> vxdb.SearchResponse
	9,  // 97: vxdb.SearchService.GetClusterInfo:output_type -> vxdb.ClusterInfo
	11, // 98: vxdb.SearchService.GetClusterStatus:output_type -> vxdb.ClusterStatus
	13, // 99: vxdb.SearchService.HealthCheck:output_type -> vxdb.HealthCheckResponse
	15, // 100: vxdb.SearchService.GetMetrics:output_type -> vxdb.MetricsResponse
	17, // 101: vxdb.SearchService.UpdateConfig:output_type -> vxdb.ConfigUpdateResponse
	17, // 102: vxdb.SearchService.GetConfig:output_type -> vxdb.ConfigUpdateResponse
	10, // 103: vxdb.AdminService.AddNode:output_type -> vxdb.NodeInfo
	34, // 104: vxdb.AdminService.RemoveNode:output_type -> google.protobuf.Empty
	10, // 105: vxdb.AdminService.UpdateNode:output_type -> vxdb.NodeInfo
	9,  // 106: vxdb.AdminService.CreateCluster:output_type -> vxdb.ClusterInfo
	34, // 107: vxdb.AdminService.DeleteCluster:output_type -> google.protobuf.Empty
	9,  // 108: vxdb.AdminService.UpdateCluster:output_type -> vxdb.ClusterInfo
	34, // 109: vxdb.AdminService.BackupSystem:output_type -> google.protobuf.Empty
	34, // 110: vxdb.AdminService.RestoreSystem:output_type -> google.protobuf.Empty
	34, // 111: vxdb.AdminService.CompactStorage:output_type -> google.protobuf.Empty
	13, // 112: vxdb.AdminService.HealthCheck:output_type -> vxdb.HealthCheckResponse
	15, // 113: vxdb.AdminService.GetMetrics:output_type -> vxdb.MetricsResponse
	17, // 114: vxdb.AdminService.UpdateConfig:output_type -> vxdb.ConfigUpdateResponse
	17, // 115: vxdb.AdminService.GetConfig:output_type -> vxdb.ConfigUpdateResponse
	71, // [71:116] is the sub-list for method output_type
	26, // [26:71] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_vxdb_proto_init() }
func file_vxdb_proto_init() {
	if File_vxdb_proto != nil {
		return
	}
	file_vxdb_proto_msgTypes[2].OneofWrappers = []any{
		(*InsertRequest_Vector)(nil),
		(*InsertRequest_Batch)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_vxdb_proto_rawDesc), len(file_vxdb_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_vxdb_proto_goTypes,
		DependencyIndexes: file_vxdb_proto_depIdxs,
		MessageInfos:      file_vxdb_proto_msgTypes,
	}.Build()
	File_vxdb_proto = out.File
	file_vxdb_proto_goTypes = nil
	file_vxdb_proto_depIdxs = nil
}
