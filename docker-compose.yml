version: '3.8'

services:
  # VxDB Insert Service
  vxinsert:
    build:
      context: .
      dockerfile: cmd/vxinsert/Dockerfile
    container_name: vxinsert
    restart: unless-stopped
    ports:
      - "8080:8080"    # HTTP API
      - "9091:9091"    # Metrics
      - "9092:9092"    # Dashboard
      - "8081:8081"    # WebSocket
      - "9093:9093"    # gRPC
      - "6379:6379"    # Redis protocol
      - "7946:7946"    # Gossip
      - "7947:7947"    # Serf
    volumes:
      - vxinsert_data:/var/lib/vxdb/data
      - vxinsert_wal:/var/lib/vxdb/wal
      - vxinsert_snapshots:/var/lib/vxdb/snapshots
      - vxinsert_buffer:/var/lib/vxdb/buffer
      - vxinsert_logs:/var/log/vxdb
      - ./configs/vxinsert-production.yaml:/etc/vxdb/config.yaml
      - ./certs:/etc/vxdb/certs
    environment:
      - VXDB_CONFIG_FILE=/etc/vxdb/config.yaml
      - GIN_MODE=release
    networks:
      - vxdb_network
    depends_on:
      - vxstorage
    healthcheck:
      test: ["CMD", "/usr/local/bin/health-check.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  # VxDB Storage Service
  vxstorage:
    build:
      context: .
      dockerfile: cmd/vxstorage/Dockerfile
    container_name: vxstorage
    restart: unless-stopped
    ports:
      - "8082:8082"    # HTTP API
      - "9094:9094"    # Metrics
      - "9095:9095"    # Dashboard
      - "9096:9096"    # gRPC
      - "7948:7948"    # Gossip
      - "7949:7949"    # Serf
    volumes:
      - vxstorage_data:/var/lib/vxdb/data
      - vxstorage_wal:/var/lib/vxdb/wal
      - vxstorage_snapshots:/var/lib/vxdb/snapshots
      - vxstorage_storage:/var/lib/vxdb/storage
      - vxstorage_temp:/var/lib/vxdb/temp
      - vxstorage_manifest:/var/lib/vxdb/manifest
      - vxstorage_backups:/var/lib/vxdb/backups
      - vxstorage_logs:/var/log/vxdb
      - ./configs/vxstorage-production.yaml:/etc/vxdb/config.yaml
      - ./certs:/etc/vxdb/certs
    environment:
      - VXDB_CONFIG_FILE=/etc/vxdb/config.yaml
      - GIN_MODE=release
    networks:
      - vxdb_network
    healthcheck:
      test: ["CMD", "/usr/local/bin/health-check.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  # VxDB Search Service
  vxsearch:
    build:
      context: .
      dockerfile: cmd/vxsearch/Dockerfile
    container_name: vxsearch
    restart: unless-stopped
    ports:
      - "8083:8083"    # HTTP API
      - "9097:9097"    # Metrics
      - "9098:9098"    # Dashboard
      - "9099:9099"    # gRPC
      - "7950:7950"    # Gossip
      - "7951:7951"    # Serf
    volumes:
      - vxsearch_data:/var/lib/vxdb/data
      - vxsearch_wal:/var/lib/vxdb/wal
      - vxsearch_snapshots:/var/lib/vxdb/snapshots
      - vxsearch_cache:/var/lib/vxdb/cache
      - vxsearch_logs:/var/log/vxdb
      - ./configs/vxsearch-production.yaml:/etc/vxdb/config.yaml
      - ./certs:/etc/vxdb/certs
    environment:
      - VXDB_CONFIG_FILE=/etc/vxdb/config.yaml
      - GIN_MODE=release
    networks:
      - vxdb_network
    depends_on:
      - vxstorage
    healthcheck:
      test: ["CMD", "/usr/local/bin/health-check.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - vxdb_network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./configs/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./configs/grafana/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - vxdb_network
    depends_on:
      - prometheus

  # Jaeger for distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    restart: unless-stopped
    ports:
      - "16686:16686"  # UI
      - "14268:14268"  # HTTP collector
      - "14250:14250"  # gRPC collector
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - vxdb_network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - vxdb_network

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./configs/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./configs/nginx/conf.d:/etc/nginx/conf.d
      - ./certs:/etc/nginx/certs
    networks:
      - vxdb_network
    depends_on:
      - vxinsert
      - vxstorage
      - vxsearch

volumes:
  # VxDB Insert Service volumes
  vxinsert_data:
    driver: local
  vxinsert_wal:
    driver: local
  vxinsert_snapshots:
    driver: local
  vxinsert_buffer:
    driver: local
  vxinsert_logs:
    driver: local

  # VxDB Storage Service volumes
  vxstorage_data:
    driver: local
  vxstorage_wal:
    driver: local
  vxstorage_snapshots:
    driver: local
  vxstorage_storage:
    driver: local
  vxstorage_temp:
    driver: local
  vxstorage_manifest:
    driver: local
  vxstorage_backups:
    driver: local
  vxstorage_logs:
    driver: local

  # VxDB Search Service volumes
  vxsearch_data:
    driver: local
  vxsearch_wal:
    driver: local
  vxsearch_snapshots:
    driver: local
  vxsearch_cache:
    driver: local
  vxsearch_logs:
    driver: local

  # Monitoring volumes
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  redis_data:
    driver: local

networks:
  vxdb_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16